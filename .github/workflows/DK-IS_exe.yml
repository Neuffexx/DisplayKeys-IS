name: DisplayKeys-IS Custom


# Trigger Build on:
on:
  push:
    branches: [ "main", "Development" ]
  pull_request:
    branches: [ "main" ]
    
# Actions project permission
#permissions:
#  contents: read
#  pull-requests: write

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
#Individual Tasks to fullfill to create artifact
jobs:

  build_exe:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
      
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
          cache: 'pip'
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ github.workspace }}/venv/requirements.txt
      
      # Build python script into a stand-alone exe
      - uses: Nuitka/Nuitka-Action@main
        with:
          script-name: ${{ github.workspace }}/venv/DisplayKeys-IS.py
          access-token: ${{ secrets.NUITKA_COMMERCIAL_ACCESS_TOKEN }}
          onefile: true
          enable-plugins: tk-inter
          disable-console: true
  
  ############################################
  
  create_artifact:
    needs: build_exe
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3        
          
      # Uploads artifact
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: DisplayKeys-IS ${{ runner.os }} Build
          path: |
            build/*.exe
            build/*.bin
            build/*.app/**/*
#
